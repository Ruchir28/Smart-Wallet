name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        cd db
        npm ci
        cd ../backend
        npm ci
        cd ../frontend
        npm ci

    - name: Create env files
      run: |
        echo "DATABASE_URL=${{ secrets.DB_URL }}" >> db/.env
        echo "TEL_BOT_DATABASE_URL=${{ secrets.TEL_BOT_DATABASE_URL }}" >> db/.env
        echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" > frontend/.env
        echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" > backend/.env
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > smartWalletTelBot/.env

    - name: Build applications
      run: |
        cd db
        npm run generate
        npm run build
        cd ../backend
        npm run build
        cd ../frontend
        npm run build
        cd ../smartWalletTelBot
        npm run build 

    - name: Setup SSH key
      env:
        PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_rsa
      
    - name: Deploy to server
      env:
        HOST: ${{ secrets.SERVER_HOST }}
        USER: ${{ secrets.SERVER_USER }}
      run: |
        # Test SSH connection
        ssh -v -o StrictHostKeyChecking=no $USER@$HOST echo "SSH connection successful"

        # Deploy db files
        scp -v -o StrictHostKeyChecking=no -r db/dist $USER@$HOST:/workplace/smart_wallet/db/
        scp -o StrictHostKeyChecking=no db/package.json db/package-lock.json $USER@$HOST:/workplace/smart_wallet/db/
        scp -o StrictHostKeyChecking=no db/.env $USER@$HOST:/workplace/smart_wallet/db/
        scp -o StrictHostKeyChecking=no -r db/prisma $USER@$HOST:/workplace/smart_wallet/db/

        # Deploy smartWalletTelBot files
        scp -o StrictHostKeyChecking=no -r smartWalletTelBot/dist $USER@HOST:/workplace/smart_wallet/smartWalletTelBot/
        scp -o StrictHostKeyChecking=no smartWalletTelBot/package.json smartWalletTelBot/package-lock.json $USER@HOST:/workplace/smart_wallet/smartWalletTelBot/
        scp -o StrictHostKeyChecking=no smartWalletTelBot/.env $USER@HOST:/workplace/smart_wallet/smartWalletTelBot/

        # Deploy backend files
        scp -o StrictHostKeyChecking=no -r backend/dist $USER@$HOST:/workplace/smart_wallet/backend/
        scp -o StrictHostKeyChecking=no backend/package.json backend/package-lock.json $USER@$HOST:/workplace/smart_wallet/backend/
        scp -o StrictHostKeyChecking=no backend/.env $USER@$HOST:/workplace/smart_wallet/backend/

        # Run Prisma migrations and restart backend
        ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
          cd /workplace/smart_wallet/db
          npm ci
          # Generate Prisma client
          npm run generate
          # Run Prisma migrations
          npm run migrate:smartwallet
          npm run migrate:telbot
          cd /workplace/smart_wallet/backend
          npm install
          # Install pm2 if not installed
          if ! command -v pm2 &> /dev/null
          then
              echo "pm2 could not be found, installing globally"
              npm install -g pm2
          fi
          pm2 restart backend-app || pm2 start dist/index.js --name backend-app
          cd /workplace/smart_wallet/smartWalletTelBot
          npm ci
          pm2 restart smartWalletTelBot || pm2 start dist/index.js --name smartWalletTelBot
        
        EOF

        # Deploy frontend files
        scp -o StrictHostKeyChecking=no -r frontend/dist/* $USER@$HOST:/workplace/smart_wallet/frontend/
        scp -o StrictHostKeyChecking=no frontend/.env $USER@$HOST:/workplace/smart_wallet/frontend/

    - name: Clean up
      run: |
        rm db/.env frontend/.env backend/.env
